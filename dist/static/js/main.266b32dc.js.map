{"version":3,"file":"static/js/main.266b32dc.js","mappings":"wGAAe,SAASA,EAAMC,EAAGC,GAC/B,OAAOD,EAAIC,ECME,SAASC,IAAa,2BAANC,EAAM,yBAANA,EAAM,gBACnC,OAAOA,EAAKC,QAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAG,GCUtCC,QAAQC,IAAIT,EAAM,EAAG,IACrBQ,QAAQC,IAAIN,EAAI,EAAG,EAAG,EAAG,IAGzB,IAAIO,EAAUV,EAAM,EAAG,GACvBQ,QAAQC,IAAIC,GACZ,IAAIC,EAAUR,EAAI,EAAG,EAAG,EAAG,EAAG,GAC9BK,QAAQC,IAAIE,GAeZC,SAASC,eAAe,uBAAuBC,QAAU,WACrDN,QAAQC,IAAI,kCAKZ,6BAAsDM,MAAK,IAAa,IAAZ,IAAEC,GAAU,EACpER,QAAQC,IAAI,mBAAoBO,EAAI,EAAG,U","sources":["webpack://webpack5/./src/js/count.js","webpack://webpack5/./src/js/sum.js","webpack://webpack5/./src/main.js"],"sourcesContent":["export default function count(x, y) {\r\n  return x - y;\r\n}","/*\r\n * @Author: Hongzhifeng\r\n * @Date: 2022-06-28 15:35:28\r\n * @LastEditors: Hongzhifeng\r\n * @LastEditTime: 2022-07-05 16:53:57\r\n * @Description: \r\n */\r\nexport default function sum(...args) {\r\n  return args.reduce((p, c) => p + c, 0);\r\n}","/*\r\n * @Author: Hongzhifeng\r\n * @Date: 2022-06-28 15:36:36\r\n * @LastEditors: Hongzhifeng\r\n * @LastEditTime: 2022-07-20 17:57:38\r\n * @Description:\r\n */\r\n// 想要webpack打包资源，必须引入该资源\r\n// (一) 引入css\r\nimport './css/iconfont.css';\r\nimport './css/index.css'; // 安装：npm i css-loader style-loader -D\r\nimport './less/index.less';\r\nimport './sass/index.sass'; //npm i sass-loader sass -D\r\nimport './sass/index.scss'; //npm i less-loader -D\r\n// import './stylus/index.styl';\r\n// (二) 引入js\r\nimport count from './js/count';\r\nimport sum from './js/sum';\r\nconsole.log(count(2, 1));\r\nconsole.log(sum(1, 2, 3, 4));\r\n\r\n// 检查eslint、babel语法\r\nlet result1 = count(2, 1);\r\nconsole.log(result1);\r\nlet result2 = sum(1, 2, 3, 4, 5);\r\nconsole.log(result2);\r\n\r\n// (三) 判断是否支持HMR功能,以下代码生产模式下会删除\r\nif (module.hot) {\r\n    module.hot.accept('./js/count.js', function (count) {\r\n        const result1 = count(2, 1);\r\n        console.log(result1);\r\n    });\r\n    module.hot.accept('./js/sum.js', function (sum) {\r\n        const result2 = sum(1, 2, 3, 4);\r\n        console.log(result2);\r\n    });\r\n}\r\n\r\n// (四)测试splitChunks配置的按需加载，动态导入\r\ndocument.getElementById('splitChunksText_btn').onClick = function () {\r\n    console.log('【测试splitChunks配置的按需加载，动态导入】-42');\r\n    /* eslint不能识别动态导入语法，会对动态导入语法（import）报错，需要修改eslint配置文件\r\n    // webpackChunkName: \"math\"：这是webpack动态导入模块命名的方式\r\n     \"math\"将来就会作为[name]的值显示。\r\n    */\r\n    import(/* webpackChunkName: \"math\" */ './js/math.js').then(({ mul }) => {\r\n        console.log('【 按需加载，动态导入 】-42', mul(2, 1));\r\n    });\r\n};\r\n"],"names":["count","x","y","sum","args","reduce","p","c","console","log","result1","result2","document","getElementById","onClick","then","mul"],"sourceRoot":""}